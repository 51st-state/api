// Code generated by counterfeiter. DO NOT EDIT.
package mocks

import (
	"sync"

	"github.com/51st-state/api/pkg/apis/inventory"
)

type FakeIdentifier struct {
	GUIDStub        func() string
	gUIDMutex       sync.RWMutex
	gUIDArgsForCall []struct{}
	gUIDReturns     struct {
		result1 string
	}
	gUIDReturnsOnCall map[int]struct {
		result1 string
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeIdentifier) GUID() string {
	fake.gUIDMutex.Lock()
	ret, specificReturn := fake.gUIDReturnsOnCall[len(fake.gUIDArgsForCall)]
	fake.gUIDArgsForCall = append(fake.gUIDArgsForCall, struct{}{})
	fake.recordInvocation("GUID", []interface{}{})
	fake.gUIDMutex.Unlock()
	if fake.GUIDStub != nil {
		return fake.GUIDStub()
	}
	if specificReturn {
		return ret.result1
	}
	return fake.gUIDReturns.result1
}

func (fake *FakeIdentifier) GUIDCallCount() int {
	fake.gUIDMutex.RLock()
	defer fake.gUIDMutex.RUnlock()
	return len(fake.gUIDArgsForCall)
}

func (fake *FakeIdentifier) GUIDReturns(result1 string) {
	fake.GUIDStub = nil
	fake.gUIDReturns = struct {
		result1 string
	}{result1}
}

func (fake *FakeIdentifier) GUIDReturnsOnCall(i int, result1 string) {
	fake.GUIDStub = nil
	if fake.gUIDReturnsOnCall == nil {
		fake.gUIDReturnsOnCall = make(map[int]struct {
			result1 string
		})
	}
	fake.gUIDReturnsOnCall[i] = struct {
		result1 string
	}{result1}
}

func (fake *FakeIdentifier) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.gUIDMutex.RLock()
	defer fake.gUIDMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeIdentifier) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ inventory.Identifier = new(FakeIdentifier)
