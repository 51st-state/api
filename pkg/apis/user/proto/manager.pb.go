// Code generated by protoc-gen-go. DO NOT EDIT.
// source: manager.proto

package user

import (
	fmt "fmt"
	proto1 "github.com/51st-state/api/pkg/rbac/proto"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	UUID                 *UUID    `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Data                 *Data    `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUUID() *UUID {
	if m != nil {
		return m.UUID
	}
	return nil
}

func (m *User) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type IncompletePassword struct {
	Password             string   `protobuf:"bytes,1,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncompletePassword) Reset()         { *m = IncompletePassword{} }
func (m *IncompletePassword) String() string { return proto.CompactTextString(m) }
func (*IncompletePassword) ProtoMessage()    {}
func (*IncompletePassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{1}
}

func (m *IncompletePassword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncompletePassword.Unmarshal(m, b)
}
func (m *IncompletePassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncompletePassword.Marshal(b, m, deterministic)
}
func (m *IncompletePassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncompletePassword.Merge(m, src)
}
func (m *IncompletePassword) XXX_Size() int {
	return xxx_messageInfo_IncompletePassword.Size(m)
}
func (m *IncompletePassword) XXX_DiscardUnknown() {
	xxx_messageInfo_IncompletePassword.DiscardUnknown(m)
}

var xxx_messageInfo_IncompletePassword proto.InternalMessageInfo

func (m *IncompletePassword) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CompletePassword struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompletePassword) Reset()         { *m = CompletePassword{} }
func (m *CompletePassword) String() string { return proto.CompactTextString(m) }
func (*CompletePassword) ProtoMessage()    {}
func (*CompletePassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{2}
}

func (m *CompletePassword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompletePassword.Unmarshal(m, b)
}
func (m *CompletePassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompletePassword.Marshal(b, m, deterministic)
}
func (m *CompletePassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompletePassword.Merge(m, src)
}
func (m *CompletePassword) XXX_Size() int {
	return xxx_messageInfo_CompletePassword.Size(m)
}
func (m *CompletePassword) XXX_DiscardUnknown() {
	xxx_messageInfo_CompletePassword.DiscardUnknown(m)
}

var xxx_messageInfo_CompletePassword proto.InternalMessageInfo

func (m *CompletePassword) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type UUID struct {
	UUID                 string   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UUID) Reset()         { *m = UUID{} }
func (m *UUID) String() string { return proto.CompactTextString(m) }
func (*UUID) ProtoMessage()    {}
func (*UUID) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{3}
}

func (m *UUID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UUID.Unmarshal(m, b)
}
func (m *UUID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UUID.Marshal(b, m, deterministic)
}
func (m *UUID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UUID.Merge(m, src)
}
func (m *UUID) XXX_Size() int {
	return xxx_messageInfo_UUID.Size(m)
}
func (m *UUID) XXX_DiscardUnknown() {
	xxx_messageInfo_UUID.DiscardUnknown(m)
}

var xxx_messageInfo_UUID proto.InternalMessageInfo

func (m *UUID) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

type Data struct {
	WCFUserID            uint64   `protobuf:"varint,1,opt,name=WCFUserID,proto3" json:"WCFUserID,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	GameHash             string   `protobuf:"bytes,4,opt,name=GameHash,proto3" json:"GameHash,omitempty"`
	Banned               bool     `protobuf:"varint,5,opt,name=Banned,proto3" json:"Banned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{4}
}

func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (m *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(m, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetWCFUserID() uint64 {
	if m != nil {
		return m.WCFUserID
	}
	return 0
}

func (m *Data) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Data) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Data) GetGameHash() string {
	if m != nil {
		return m.GameHash
	}
	return ""
}

func (m *Data) GetBanned() bool {
	if m != nil {
		return m.Banned
	}
	return false
}

type GetUserRequest struct {
	UUID                 *UUID    `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{5}
}

func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (m *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(m, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetUUID() *UUID {
	if m != nil {
		return m.UUID
	}
	return nil
}

type CreateUserRequest struct {
	Data                 *Data    `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserRequest) Reset()         { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()    {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{6}
}

func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest.Unmarshal(m, b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
}
func (m *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(m, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest.Size(m)
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteUserRequest struct {
	UUID                 *UUID    `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteUserRequest) Reset()         { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()    {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{7}
}

func (m *DeleteUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteUserRequest.Unmarshal(m, b)
}
func (m *DeleteUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteUserRequest.Marshal(b, m, deterministic)
}
func (m *DeleteUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteUserRequest.Merge(m, src)
}
func (m *DeleteUserRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteUserRequest.Size(m)
}
func (m *DeleteUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteUserRequest proto.InternalMessageInfo

func (m *DeleteUserRequest) GetUUID() *UUID {
	if m != nil {
		return m.UUID
	}
	return nil
}

type UpdateUserRequest struct {
	UUID                 *UUID    `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Data                 *Data    `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserRequest) Reset()         { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()    {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{8}
}

func (m *UpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest.Unmarshal(m, b)
}
func (m *UpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest.Merge(m, src)
}
func (m *UpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest.Size(m)
}
func (m *UpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest proto.InternalMessageInfo

func (m *UpdateUserRequest) GetUUID() *UUID {
	if m != nil {
		return m.UUID
	}
	return nil
}

func (m *UpdateUserRequest) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type CheckUserPasswordRequest struct {
	UUID                 *UUID               `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Password             *IncompletePassword `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CheckUserPasswordRequest) Reset()         { *m = CheckUserPasswordRequest{} }
func (m *CheckUserPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*CheckUserPasswordRequest) ProtoMessage()    {}
func (*CheckUserPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{9}
}

func (m *CheckUserPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserPasswordRequest.Unmarshal(m, b)
}
func (m *CheckUserPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserPasswordRequest.Marshal(b, m, deterministic)
}
func (m *CheckUserPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserPasswordRequest.Merge(m, src)
}
func (m *CheckUserPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_CheckUserPasswordRequest.Size(m)
}
func (m *CheckUserPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserPasswordRequest proto.InternalMessageInfo

func (m *CheckUserPasswordRequest) GetUUID() *UUID {
	if m != nil {
		return m.UUID
	}
	return nil
}

func (m *CheckUserPasswordRequest) GetPassword() *IncompletePassword {
	if m != nil {
		return m.Password
	}
	return nil
}

type WCFUserInfo struct {
	UserID               uint64   `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Password             []byte   `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WCFUserInfo) Reset()         { *m = WCFUserInfo{} }
func (m *WCFUserInfo) String() string { return proto.CompactTextString(m) }
func (*WCFUserInfo) ProtoMessage()    {}
func (*WCFUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{10}
}

func (m *WCFUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WCFUserInfo.Unmarshal(m, b)
}
func (m *WCFUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WCFUserInfo.Marshal(b, m, deterministic)
}
func (m *WCFUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WCFUserInfo.Merge(m, src)
}
func (m *WCFUserInfo) XXX_Size() int {
	return xxx_messageInfo_WCFUserInfo.Size(m)
}
func (m *WCFUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WCFUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WCFUserInfo proto.InternalMessageInfo

func (m *WCFUserInfo) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *WCFUserInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *WCFUserInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *WCFUserInfo) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

type GetWCFInfoRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWCFInfoRequest) Reset()         { *m = GetWCFInfoRequest{} }
func (m *GetWCFInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetWCFInfoRequest) ProtoMessage()    {}
func (*GetWCFInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{11}
}

func (m *GetWCFInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWCFInfoRequest.Unmarshal(m, b)
}
func (m *GetWCFInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWCFInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetWCFInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWCFInfoRequest.Merge(m, src)
}
func (m *GetWCFInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetWCFInfoRequest.Size(m)
}
func (m *GetWCFInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWCFInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWCFInfoRequest proto.InternalMessageInfo

func (m *GetWCFInfoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetUserByGameSerialHashRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserByGameSerialHashRequest) Reset()         { *m = GetUserByGameSerialHashRequest{} }
func (m *GetUserByGameSerialHashRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserByGameSerialHashRequest) ProtoMessage()    {}
func (*GetUserByGameSerialHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{12}
}

func (m *GetUserByGameSerialHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserByGameSerialHashRequest.Unmarshal(m, b)
}
func (m *GetUserByGameSerialHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserByGameSerialHashRequest.Marshal(b, m, deterministic)
}
func (m *GetUserByGameSerialHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserByGameSerialHashRequest.Merge(m, src)
}
func (m *GetUserByGameSerialHashRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserByGameSerialHashRequest.Size(m)
}
func (m *GetUserByGameSerialHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserByGameSerialHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserByGameSerialHashRequest proto.InternalMessageInfo

func (m *GetUserByGameSerialHashRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetUserByWCFUserIDRequest struct {
	WCFUserID            uint64   `protobuf:"varint,1,opt,name=WCFUserID,proto3" json:"WCFUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserByWCFUserIDRequest) Reset()         { *m = GetUserByWCFUserIDRequest{} }
func (m *GetUserByWCFUserIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserByWCFUserIDRequest) ProtoMessage()    {}
func (*GetUserByWCFUserIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{13}
}

func (m *GetUserByWCFUserIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserByWCFUserIDRequest.Unmarshal(m, b)
}
func (m *GetUserByWCFUserIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserByWCFUserIDRequest.Marshal(b, m, deterministic)
}
func (m *GetUserByWCFUserIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserByWCFUserIDRequest.Merge(m, src)
}
func (m *GetUserByWCFUserIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserByWCFUserIDRequest.Size(m)
}
func (m *GetUserByWCFUserIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserByWCFUserIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserByWCFUserIDRequest proto.InternalMessageInfo

func (m *GetUserByWCFUserIDRequest) GetWCFUserID() uint64 {
	if m != nil {
		return m.WCFUserID
	}
	return 0
}

type SetUserRolesRequest struct {
	UUID                 *UUID                `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Roles                *proto1.AccountRoles `protobuf:"bytes,2,opt,name=Roles,proto3" json:"Roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SetUserRolesRequest) Reset()         { *m = SetUserRolesRequest{} }
func (m *SetUserRolesRequest) String() string { return proto.CompactTextString(m) }
func (*SetUserRolesRequest) ProtoMessage()    {}
func (*SetUserRolesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cde9ec64f0d2c859, []int{14}
}

func (m *SetUserRolesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetUserRolesRequest.Unmarshal(m, b)
}
func (m *SetUserRolesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetUserRolesRequest.Marshal(b, m, deterministic)
}
func (m *SetUserRolesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetUserRolesRequest.Merge(m, src)
}
func (m *SetUserRolesRequest) XXX_Size() int {
	return xxx_messageInfo_SetUserRolesRequest.Size(m)
}
func (m *SetUserRolesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetUserRolesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetUserRolesRequest proto.InternalMessageInfo

func (m *SetUserRolesRequest) GetUUID() *UUID {
	if m != nil {
		return m.UUID
	}
	return nil
}

func (m *SetUserRolesRequest) GetRoles() *proto1.AccountRoles {
	if m != nil {
		return m.Roles
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "user.User")
	proto.RegisterType((*IncompletePassword)(nil), "user.IncompletePassword")
	proto.RegisterType((*CompletePassword)(nil), "user.CompletePassword")
	proto.RegisterType((*UUID)(nil), "user.UUID")
	proto.RegisterType((*Data)(nil), "user.Data")
	proto.RegisterType((*GetUserRequest)(nil), "user.GetUserRequest")
	proto.RegisterType((*CreateUserRequest)(nil), "user.CreateUserRequest")
	proto.RegisterType((*DeleteUserRequest)(nil), "user.DeleteUserRequest")
	proto.RegisterType((*UpdateUserRequest)(nil), "user.UpdateUserRequest")
	proto.RegisterType((*CheckUserPasswordRequest)(nil), "user.CheckUserPasswordRequest")
	proto.RegisterType((*WCFUserInfo)(nil), "user.WCFUserInfo")
	proto.RegisterType((*GetWCFInfoRequest)(nil), "user.GetWCFInfoRequest")
	proto.RegisterType((*GetUserByGameSerialHashRequest)(nil), "user.GetUserByGameSerialHashRequest")
	proto.RegisterType((*GetUserByWCFUserIDRequest)(nil), "user.GetUserByWCFUserIDRequest")
	proto.RegisterType((*SetUserRolesRequest)(nil), "user.SetUserRolesRequest")
}

func init() { proto.RegisterFile("manager.proto", fileDescriptor_cde9ec64f0d2c859) }

var fileDescriptor_cde9ec64f0d2c859 = []byte{
	// 646 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x5f, 0x6f, 0xd3, 0x3e,
	0x14, 0x5d, 0x7f, 0xbf, 0x74, 0x5b, 0xef, 0x0a, 0x22, 0x66, 0xda, 0xb2, 0x80, 0xca, 0x14, 0x21,
	0xe8, 0xcb, 0x92, 0xb2, 0x0e, 0x24, 0x78, 0x41, 0x2c, 0x5d, 0xcb, 0x1e, 0x8a, 0x50, 0xaa, 0x6a,
	0x8f, 0xc8, 0x4d, 0xbd, 0xb6, 0x5a, 0x12, 0x87, 0xc4, 0x15, 0xda, 0x07, 0xe0, 0x85, 0x4f, 0x8d,
	0x6c, 0xe7, 0x5f, 0x93, 0xb5, 0xdb, 0xc4, 0x9b, 0x7d, 0x7d, 0xcf, 0xf1, 0xf1, 0xbd, 0xe7, 0x1a,
	0x9e, 0xf8, 0x38, 0xc0, 0x33, 0x12, 0x99, 0x61, 0x44, 0x19, 0x45, 0xca, 0x32, 0x26, 0x91, 0xfe,
	0x62, 0x46, 0xe9, 0xcc, 0x23, 0x96, 0x88, 0x4d, 0x96, 0xd7, 0x16, 0xf1, 0x43, 0x76, 0x2b, 0x53,
	0xf4, 0x0f, 0xb3, 0x05, 0x9b, 0x2f, 0x27, 0xa6, 0x4b, 0x7d, 0xeb, 0xfd, 0xbb, 0x98, 0x9d, 0xc4,
	0x0c, 0x33, 0x62, 0xe1, 0x70, 0x61, 0x85, 0x37, 0x33, 0x2b, 0x9a, 0x60, 0x57, 0x02, 0x2d, 0x97,
	0x06, 0x2c, 0xa2, 0x9e, 0xc4, 0x19, 0x7d, 0x50, 0xc6, 0x31, 0x89, 0x50, 0x0b, 0x94, 0xf1, 0xf8,
	0xb2, 0xa7, 0xd5, 0x8e, 0x6b, 0xed, 0xbd, 0x53, 0x30, 0xf9, 0x8d, 0x26, 0x8f, 0x38, 0x22, 0xce,
	0xcf, 0x7b, 0x98, 0x61, 0xed, 0xbf, 0xe2, 0x39, 0x8f, 0x38, 0x22, 0x6e, 0x74, 0x00, 0x5d, 0x06,
	0x2e, 0xf5, 0x43, 0x8f, 0x30, 0xf2, 0x1d, 0xc7, 0xf1, 0x2f, 0x1a, 0x4d, 0x91, 0x0e, 0xbb, 0xe9,
	0x5a, 0x30, 0x37, 0x9c, 0x6c, 0x6f, 0xbc, 0x81, 0x67, 0x76, 0x39, 0x1f, 0x81, 0xf2, 0x15, 0xc7,
	0x73, 0x91, 0xdb, 0x74, 0xc4, 0xda, 0xd0, 0xa5, 0x32, 0x7e, 0x96, 0x29, 0x6c, 0x48, 0x55, 0xc6,
	0x9f, 0x9a, 0x94, 0x85, 0x5e, 0x42, 0xe3, 0xca, 0xee, 0xf3, 0x97, 0x24, 0x19, 0x8a, 0x93, 0x07,
	0xb8, 0x0c, 0xbe, 0x0a, 0xb0, 0x4f, 0xc4, 0x03, 0x1a, 0x4e, 0xb6, 0x47, 0xfb, 0x50, 0xbf, 0xf0,
	0xf1, 0xc2, 0xd3, 0xfe, 0x17, 0x07, 0x72, 0xc3, 0x11, 0x03, 0xec, 0x13, 0x21, 0x46, 0x91, 0x88,
	0x74, 0x8f, 0x0e, 0x60, 0xfb, 0x1c, 0x07, 0x01, 0x99, 0x6a, 0xf5, 0xe3, 0x5a, 0x7b, 0xd7, 0x49,
	0x76, 0x46, 0x07, 0x9e, 0x0e, 0x08, 0xe3, 0xc4, 0x0e, 0xf9, 0xb9, 0x24, 0x31, 0xbb, 0xaf, 0xa8,
	0x46, 0x17, 0x54, 0x3b, 0x22, 0x98, 0x91, 0x12, 0x48, 0x54, 0xba, 0xb6, 0xa6, 0xd2, 0x5d, 0x50,
	0x7b, 0x84, 0x57, 0xed, 0x31, 0x37, 0x8d, 0x40, 0x1d, 0x87, 0x53, 0xfc, 0x28, 0xd0, 0xbd, 0x3d,
	0x0f, 0x41, 0xb3, 0xe7, 0xc4, 0xbd, 0xe1, 0x9c, 0x69, 0x0b, 0x1f, 0xca, 0x7d, 0x56, 0x70, 0x86,
	0xe4, 0xd7, 0x64, 0x4e, 0xd5, 0x45, 0x05, 0xcf, 0xc4, 0xb0, 0x97, 0x76, 0x35, 0xb8, 0xa6, 0xbc,
	0x13, 0x2b, 0x2d, 0xdf, 0xfe, 0x97, 0x7e, 0x67, 0x72, 0x14, 0x61, 0xbe, 0xfc, 0xd2, 0xb7, 0xa0,
	0x0e, 0x08, 0xbb, 0xb2, 0xfb, 0xfc, 0xce, 0xf4, 0x7d, 0x08, 0x94, 0x6f, 0x9c, 0x3e, 0x71, 0x23,
	0x5f, 0x1b, 0x67, 0xd0, 0x4a, 0x0c, 0x70, 0x7e, 0xcb, 0xdd, 0x32, 0x22, 0xd1, 0x02, 0x7b, 0xdc,
	0x33, 0x05, 0x54, 0xe6, 0xef, 0x46, 0xe2, 0xef, 0x8f, 0x70, 0x94, 0xa1, 0x32, 0xcb, 0xa6, 0x80,
	0x8d, 0xbe, 0x36, 0x7e, 0xc0, 0xf3, 0x51, 0xe2, 0x38, 0xea, 0x91, 0xf8, 0xa1, 0xb5, 0x6f, 0x43,
	0x5d, 0xe4, 0x27, 0x85, 0x47, 0x26, 0xff, 0x1d, 0xcc, 0x2f, 0xae, 0x4b, 0x97, 0x01, 0x93, 0x4c,
	0x32, 0xe1, 0xf4, 0x77, 0x1d, 0x76, 0x86, 0xf2, 0x2b, 0x42, 0x27, 0xb0, 0x93, 0xe8, 0x44, 0xfb,
	0x92, 0x72, 0xd5, 0xed, 0x7a, 0x7a, 0x51, 0x4c, 0x22, 0x63, 0x0b, 0x0d, 0xe1, 0x70, 0x4d, 0x31,
	0xd0, 0xeb, 0x15, 0xf8, 0x9a, 0x5a, 0x95, 0xe8, 0x6c, 0x40, 0xd5, 0x2a, 0xa1, 0x57, 0x25, 0xa6,
	0x72, 0xfd, 0x4a, 0x24, 0x5d, 0x80, 0x7c, 0xde, 0xd0, 0xa1, 0x3c, 0xab, 0x4c, 0x60, 0x09, 0xf4,
	0x19, 0x20, 0x9f, 0xb7, 0x14, 0x54, 0x99, 0x40, 0xfd, 0xc0, 0x94, 0xdf, 0xb3, 0x99, 0x7e, 0xcf,
	0xe6, 0x05, 0xff, 0x9e, 0x25, 0x41, 0x3e, 0x7b, 0x29, 0x41, 0x65, 0x1a, 0x37, 0x10, 0x0c, 0x41,
	0xad, 0xcc, 0x19, 0x6a, 0x25, 0xea, 0xd7, 0x0c, 0xe0, 0x06, 0xba, 0x4f, 0x00, 0xb9, 0x9f, 0x53,
	0x3d, 0x15, 0x87, 0xeb, 0xaa, 0x3c, 0x28, 0xcc, 0x9b, 0xb1, 0x85, 0x3a, 0xd0, 0x1c, 0x14, 0x1c,
	0x87, 0x0a, 0xe6, 0xd2, 0xef, 0xf0, 0x91, 0x68, 0x5c, 0xb3, 0xe8, 0x51, 0x74, 0x24, 0x11, 0x77,
	0xf8, 0x76, 0xbd, 0xe4, 0xc9, 0xb6, 0x88, 0x74, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x52,
	0x04, 0x42, 0x18, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ManagerClient is the client API for Manager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ManagerClient interface {
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error)
	GetUserByGameSerialHash(ctx context.Context, in *GetUserByGameSerialHashRequest, opts ...grpc.CallOption) (*User, error)
	GetUserByWCFUserID(ctx context.Context, in *GetUserByWCFUserIDRequest, opts ...grpc.CallOption) (*User, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error)
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CheckUserPassword(ctx context.Context, in *CheckUserPasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetWCFInfo(ctx context.Context, in *GetWCFInfoRequest, opts ...grpc.CallOption) (*WCFUserInfo, error)
	GetUserRoles(ctx context.Context, in *UUID, opts ...grpc.CallOption) (*proto1.AccountRoles, error)
	SetUserRoles(ctx context.Context, in *SetUserRolesRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type managerClient struct {
	cc *grpc.ClientConn
}

func NewManagerClient(cc *grpc.ClientConn) ManagerClient {
	return &managerClient{cc}
}

func (c *managerClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/user.Manager/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetUserByGameSerialHash(ctx context.Context, in *GetUserByGameSerialHashRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/user.Manager/GetUserByGameSerialHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetUserByWCFUserID(ctx context.Context, in *GetUserByWCFUserIDRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/user.Manager/GetUserByWCFUserID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/user.Manager/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/user.Manager/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/user.Manager/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) CheckUserPassword(ctx context.Context, in *CheckUserPasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/user.Manager/CheckUserPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetWCFInfo(ctx context.Context, in *GetWCFInfoRequest, opts ...grpc.CallOption) (*WCFUserInfo, error) {
	out := new(WCFUserInfo)
	err := c.cc.Invoke(ctx, "/user.Manager/GetWCFInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) GetUserRoles(ctx context.Context, in *UUID, opts ...grpc.CallOption) (*proto1.AccountRoles, error) {
	out := new(proto1.AccountRoles)
	err := c.cc.Invoke(ctx, "/user.Manager/GetUserRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) SetUserRoles(ctx context.Context, in *SetUserRolesRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/user.Manager/SetUserRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ManagerServer is the server API for Manager service.
type ManagerServer interface {
	GetUser(context.Context, *GetUserRequest) (*User, error)
	GetUserByGameSerialHash(context.Context, *GetUserByGameSerialHashRequest) (*User, error)
	GetUserByWCFUserID(context.Context, *GetUserByWCFUserIDRequest) (*User, error)
	CreateUser(context.Context, *CreateUserRequest) (*User, error)
	DeleteUser(context.Context, *DeleteUserRequest) (*empty.Empty, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*empty.Empty, error)
	CheckUserPassword(context.Context, *CheckUserPasswordRequest) (*empty.Empty, error)
	GetWCFInfo(context.Context, *GetWCFInfoRequest) (*WCFUserInfo, error)
	GetUserRoles(context.Context, *UUID) (*proto1.AccountRoles, error)
	SetUserRoles(context.Context, *SetUserRolesRequest) (*empty.Empty, error)
}

func RegisterManagerServer(s *grpc.Server, srv ManagerServer) {
	s.RegisterService(&_Manager_serviceDesc, srv)
}

func _Manager_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Manager/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetUserByGameSerialHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserByGameSerialHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetUserByGameSerialHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Manager/GetUserByGameSerialHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetUserByGameSerialHash(ctx, req.(*GetUserByGameSerialHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetUserByWCFUserID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserByWCFUserIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetUserByWCFUserID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Manager/GetUserByWCFUserID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetUserByWCFUserID(ctx, req.(*GetUserByWCFUserIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Manager/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Manager/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Manager/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_CheckUserPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).CheckUserPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Manager/CheckUserPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).CheckUserPassword(ctx, req.(*CheckUserPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetWCFInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWCFInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetWCFInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Manager/GetWCFInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetWCFInfo(ctx, req.(*GetWCFInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_GetUserRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UUID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetUserRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Manager/GetUserRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetUserRoles(ctx, req.(*UUID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_SetUserRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserRolesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).SetUserRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Manager/SetUserRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).SetUserRoles(ctx, req.(*SetUserRolesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Manager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.Manager",
	HandlerType: (*ManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _Manager_GetUser_Handler,
		},
		{
			MethodName: "GetUserByGameSerialHash",
			Handler:    _Manager_GetUserByGameSerialHash_Handler,
		},
		{
			MethodName: "GetUserByWCFUserID",
			Handler:    _Manager_GetUserByWCFUserID_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _Manager_CreateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _Manager_DeleteUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _Manager_UpdateUser_Handler,
		},
		{
			MethodName: "CheckUserPassword",
			Handler:    _Manager_CheckUserPassword_Handler,
		},
		{
			MethodName: "GetWCFInfo",
			Handler:    _Manager_GetWCFInfo_Handler,
		},
		{
			MethodName: "GetUserRoles",
			Handler:    _Manager_GetUserRoles_Handler,
		},
		{
			MethodName: "SetUserRoles",
			Handler:    _Manager_SetUserRoles_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "manager.proto",
}
